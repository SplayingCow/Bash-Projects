#!/bin/zsh
# Network Packet Sniffer
# This script captures network packets and logs them for analysis.

# Define output file for packet capture
OUTPUT_FILE="packet_sniffer_capture.pcap"

# Function to check for tcpdump installation
check_dependencies() {
    if ! command -v tcpdump &>/dev/null; then
        echo "Error: tcpdump is not installed. Please install it to use this script."
        exit 1
    fi
}

# Function to list available network interfaces
list_interfaces() {
    echo "Available Network Interfaces:"
    ip link show | awk -F: '$0 !~ "lo|vir|docker|^[^0-9]" {print $2;getline}'
}

# Function to start packet sniffing
start_sniffing() {
    read -r -p "Enter the network interface to sniff (e.g., eth0): " interface

    if [[ -z "$interface" ]]; then
        echo "Error: No interface specified. Exiting."
        exit 1
    fi

    echo "Starting packet capture on interface $interface..."
    echo "Packets will be saved to $OUTPUT_FILE. Press Ctrl+C to stop."
    sudo tcpdump -i "$interface" -w "$OUTPUT_FILE"
}

# Function to analyze captured packets
analyze_packets() {
    if [[ ! -f "$OUTPUT_FILE" ]]; then
        echo "Error: No capture file found. Please run a capture first."
        exit 1
    fi

    echo "Analyzing captured packets..."
    tcpdump -r "$OUTPUT_FILE" | less
}

# Main menu
while true; do
    echo "Network Packet Sniffer"
    echo "1. List Network Interfaces"
    echo "2. Start Packet Sniffing"
    echo "3. Analyze Captured Packets"
    echo "4. Exit"
    read -r -p "Choose an option: " choice

    case $choice in
        1)
            list_interfaces
            ;;
        2)
            start_sniffing
            ;;
        3)
            analyze_packets
            ;;
        4)
            echo "Exiting Network Packet Sniffer."
            exit 0
            ;;
        *)
            echo "Invalid option. Please choose a valid action."
            ;;
    esac
done
